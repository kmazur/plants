
# Focus camera + lens
libcamera-still --hdr 1 --autofocus-range full --shutter 8000 --ev -500000 -t 2000 -o test-zoom.jpg

# Timelapse
libcamera-still -t 400000000 --timelapse 60000 --framestart 1 -o test%04d.jpg

# To enable the HDR mode, please type the following into a terminal window before starting Picamera2
v4l2-ctl --set-ctrl wide_dynamic_range=1 -d /dev/v4l-subdev0
# to disable =0

# List camera modes
https://www.raspberrypi.com/documentation/accessories/camera.html
https://datasheets.raspberrypi.com/camera/picamera2-manual.pdf
https://github.com/raspberrypi/picamera2/blob/main/examples/capture_motion.py
libcamera-hello --list-cameras
0 : imx708_wide [4608x2592] (/base/soc/i2c0mux/i2c@1/imx708@1a)
    Modes: 'SRGGB10_CSI2P' : 1536x864 [120.13 fps - (768, 432)/3072x1728 crop]
                             2304x1296 [56.03 fps - (0, 0)/4608x2592 crop]
                             4608x2592 [14.35 fps - (0, 0)/4608x2592 crop]


# ffmpeg convert to framerate
ffmpeg -r 56 -i .\1697189194.h264 -c copy test.mp4

# ffmpeg join timelapse
ffmpeg -start_number 1 -framerate 30 -i test%04d.jpg -c:v libx264 -r 30 -pix_fmt yuv420p output.mp4

# motion detection
sudo nice -n -20 libcamerify motion



#### OTHER INSTALLATIONS

### WIFI Adapters

# TP-Link adapter
https://www.linuxfordevices.com/tutorials/ubuntu/install-tp-link-wifi-adapter-driver-in-linux

# Realtek wifi adapter
https://askubuntu.com/questions/1162974/wireless-usb-adapter-0bdac811-realtek-semiconductor-corp



## WINDOWS

### rsync for windows
https://packages.msys2.org/package/libxxhash?repo=msys&variant=x86_64
https://prasaz.medium.com/add-rsync-to-windows-git-bash-f42736bae1b3

"C:\Program Files\Git\git-bash.exe" --login -i -c "cd ~/Downloads; rsync -Pav -e \"ssh -i $HOME/.ssh/id_rsa_pi\" user@192.168.0.80:/home/user/WORK/tmp/test rsync-test"


## drive-cli - https://github.com/nurdtechie98/drive-cli

1. Create GCP Project
2. Enable Drive API
3. Add test user
4. clone https://github.com/nurdtechie98/drive-cli
5. cd drive-cli/drive_cli
6. Generate oauth.json in GCP
7. Add oauth.json from GCP to the drive-cli/drive_cli
8. drive --remote login - login & copy the token
9. relaunch

### cron
crontab -e
"minute hour day-of-month month day-of-week command"
https://crontab.guru/#*/10_*_*_*_*
e.g. 30 17 * * 1 /path/to/command
*/10 * * * * /home/user/WORK/workspace/plants/shell/cron/upload_last.sh


### GIT

Add executable permissions
git update-index --chmod=+x <file>